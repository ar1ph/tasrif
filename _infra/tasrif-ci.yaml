trigger:
  batch: true
  branches:
    include:
    - master
resources:
  - repo: self

pool: tasrif-pool

stages:
  - stage: Build
    jobs:
    - job: CheckChanges
      displayName: 'Check changes'
      steps:
        - script: |
            #!/bin/bash
            echo "##vso[task.setvariable variable=testvar;]testvalue"
            PATH_FILTER="tasrif/processing_pipeline/kats"
            CHANGED_FILES=$(git diff --name-only -- tasrif/processing_pipeline/kats/)

            for FILE in $CHANGED_FILES
            do
              PARENT_DIR=$(dirname ${FILE})
              if [[ $PARENT_DIR == *$PATH_FILTER* ]]; then
                echo "${FILE} changed"
                echo "##vso[task.setvariable variable=SOURCE_CODE_CHANGED;isOutput=true]true"
                exit 0
              fi
            done

            echo "##vso[task.setvariable variable=SOURCE_CODE_CHANGED;isOutput=true]false"
          name: check_changes
          displayName: 'Check changed files'

    - job: BuildTasrif
      displayName: Build Tasrif
      dependsOn: CheckChanges # <- Important: Mark previous job as dependency
      steps:
      - checkout: self
      - task: Docker@2
        displayName: 'Build Tasrif'
        inputs:
          command: build
          repository: $(Build.Repository.Name)
          containerRegistry: tasrif-acr
          # Set tag to 'latest' only on builds from master branch
          ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
            tags: |
              $(Build.BuildId)
              latest
          ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
            tags: |
              $(Build.BuildId)
          arguments: --build-arg optional_code_changed=dependencies.CheckChanges.outputs['check_changes.SOURCE_CODE_CHANGED']

      - task: Docker@2
        displayName: 'Push Tasrif' 
        inputs:
          command: push
          repository: $(Build.Repository.Name)
          containerRegistry: tasrif-acr
          # Set tag to 'latest' only on builds from master branch
          ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
            tags: |
              $(Build.BuildId)
              latest
          ${{ if ne(variables['Build.SourceBranchName'], 'master') }}:
            tags: |
              $(Build.BuildId)

  - stage: Test
    jobs:
    - job: RunPylint
      displayName: Run Pylint
      steps:
      - checkout: none # No need, docker run will pull the image
      - task: Docker@2
        displayName: 'Run pylint'
        inputs:
          command: run # Docker@2 can take direct docker commands as input
          containerRegistry: tasrif-acr
          arguments: >-
            -v $(System.DefaultWorkingDirectory)/pylint:/home/pylint
            qcriswtasrif.azurecr.io/$(Build.Repository.Name):$(Build.BuildId)
            /home/run-pylint.sh
      - task: PublishTestResults@2
        displayName: 'Publish pylint Results'
        inputs:
          testResultsFormat: 'Junit'
          testResultsFiles: '**/*.xml'
          searchFolder: '$(System.DefaultWorkingDirectory)/pylint'
          publishRunAttachments: true
          testRunTitle: 'Pylint'
        condition: succeededOrFailed()
